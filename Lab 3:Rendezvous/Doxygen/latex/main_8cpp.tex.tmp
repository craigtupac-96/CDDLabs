\hypertarget{main_8cpp}{}\section{main.\+cpp File Reference}
\label{main_8cpp}\index{main.\+cpp@{main.\+cpp}}


A documented file.  


{\ttfamily \#include \char`\"{}Semaphore.\+h\char`\"{}}\newline
{\ttfamily \#include $<$iostream$>$}\newline
{\ttfamily \#include $<$thread$>$}\newline
{\ttfamily \#include $<$chrono$>$}\newline
Include dependency graph for main.\+cpp\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{main_8cpp_ad4db00b03053cac70fc4f3acc4f262f9}{task\+One} (std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$ first\+Sem, std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$ second\+Sem, int delay)
\begin{DoxyCompactList}\small\item\em displays a message that is split in to 2 sections to show how a rendezvous works \end{DoxyCompactList}\item 
void \hyperlink{main_8cpp_a11b9252a93d48005fb013623f8070711}{task\+Two} (std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$ first\+Sem, std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$ second\+Sem, int delay)
\begin{DoxyCompactList}\small\item\em displays a message that is split in to 2 sections to show how a rendezvous works \end{DoxyCompactList}\item 
int \hyperlink{main_8cpp_a840291bc02cba5474a4cb46a9b9566fe}{main} (void)
\begin{DoxyCompactList}\small\item\em The eponymous main function. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
A documented file. 

Craig Lawlor Feb 29019 

\subsection{Function Documentation}
\mbox{\Hypertarget{main_8cpp_a840291bc02cba5474a4cb46a9b9566fe}\label{main_8cpp_a840291bc02cba5474a4cb46a9b9566fe}} 
\index{main.\+cpp@{main.\+cpp}!main@{main}}
\index{main@{main}!main.\+cpp@{main.\+cpp}}
\subsubsection{\texorpdfstring{main()}{main()}}
{\footnotesize\ttfamily int \hyperlink{classmain}{main} (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}



The eponymous main function. 

$<$ Launch the threads \mbox{\Hypertarget{main_8cpp_ad4db00b03053cac70fc4f3acc4f262f9}\label{main_8cpp_ad4db00b03053cac70fc4f3acc4f262f9}} 
\index{main.\+cpp@{main.\+cpp}!task\+One@{task\+One}}
\index{task\+One@{task\+One}!main.\+cpp@{main.\+cpp}}
\subsubsection{\texorpdfstring{task\+One()}{taskOne()}}
{\footnotesize\ttfamily task\+One (\begin{DoxyParamCaption}\item[{std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$}]{first\+Sem,  }\item[{std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$}]{second\+Sem,  }\item[{int}]{delay }\end{DoxyParamCaption})}



displays a message that is split in to 2 sections to show how a rendezvous works 


\begin{DoxyParams}{Parameters}
{\em first\+Sem} & the first shared seaphore \\
\hline
{\em second\+Sem} & the second shared semaphore \\
\hline
{\em delay} & holds the time to delay\\
\hline
\end{DoxyParams}
Displays a message that the first task arrived and then sends a signal to allow the second task to exit \mbox{\Hypertarget{main_8cpp_a11b9252a93d48005fb013623f8070711}\label{main_8cpp_a11b9252a93d48005fb013623f8070711}} 
\index{main.\+cpp@{main.\+cpp}!task\+Two@{task\+Two}}
\index{task\+Two@{task\+Two}!main.\+cpp@{main.\+cpp}}
\subsubsection{\texorpdfstring{task\+Two()}{taskTwo()}}
{\footnotesize\ttfamily task\+Two (\begin{DoxyParamCaption}\item[{std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$}]{first\+Sem,  }\item[{std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$}]{second\+Sem,  }\item[{int}]{delay }\end{DoxyParamCaption})}



displays a message that is split in to 2 sections to show how a rendezvous works 


\begin{DoxyParams}{Parameters}
{\em first\+Sem} & the first shared seaphore \\
\hline
{\em second\+Sem} & the second shared semaphore \\
\hline
{\em delay} & holds the time to delay\\
\hline
\end{DoxyParams}
Displays a message that the second task has arrived and sends a wait to stop the thread fro exiting until it receives a signal from the other thread 